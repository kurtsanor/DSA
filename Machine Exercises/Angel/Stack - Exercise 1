import java.util.Stack;

public class BalancedParentheses {
    public static void main(String[] args) {
        // Example parentheses strings to check
        String[] parentheses = {"((()))", "(()())", "(()", "())"};

        // Check each string and print whether it's balanced
        for (String s : parentheses) {
            System.out.println(s + " is balanced: " + isBalanced(s));
        }
    }

    public static boolean isBalanced(String s) {
        // Create a stack to track parentheses
        Stack<Character> stack = new Stack<>();

        // Iterate through each character in the string
        for (char c : s.toCharArray()) {
            if (c == '(') {
                stack.push(c); // Push opening parentheses onto the stack
            } else if (c == ')') {
                // If the stack is empty, the string is unbalanced
                if (stack.isEmpty()) {
                    return false;
                }
                stack.pop(); // Pop a matching opening parenthesis
            }
        }

        // Return true if the stack is empty (all parentheses matched)
        return stack.isEmpty();
    }
}
